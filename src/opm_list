#! /bin/sh
# opm list: list install packages
# opm list package...: list just those packages

if [ "$1" = "--list-commands" ]; then
  printf "  %-10s list installed packages\n"  list
  exit 0
fi

if [ "$1" = "-h" -o "$1" = "--help" ]; then
  echo Usage: opm list [package...]
  exit 0
fi

# try_FOO -
#   if package manager FOO is found: 
#     invoke the package manager to list installed packages
#     set EXIT_CODE
#     return 0
#   otherwise, return 1

try_apk() {
  if [ -x "$(command -v apk)" ]; then
    apk list --installed "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_apt() {
  if [ -x "$(command -v apt)" ]; then
    apt list --installed "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_brew() {
  if [ -x "$(command -v brew)" ]; then
    # brew behaves differently to the other package managers:
    # brew list pkg shows the *contents* of pkg
    if [ $# -eq 0 ]; then
      brew list
    else
      pattern="^("
      join=
      for package in "$@"; do
        pattern="${pattern}${join}${package}"
        join="|"
      done
      pattern="${pattern})\$"
      brew list | grep -E "$pattern"
    fi
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_pacman() {
  if [ -x "$(command -v pacman)" ]; then
    pacman -Q "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}
  
try_rpm() {
  if [ -x "$(command -v rpm)" ]; then
    if [ $# -eq 0 ]; then
      rpm -qa
    else
      rpm -q "$@"
    fi
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

if [ $(uname) = Darwin ]; then
  try_brew "$@" && exit $EXIT_CODE
else
  try_apk "$@" && exit $EXIT_CODE
  try_apt "$@" && exit $EXIT_CODE
  try_pacman "$@" && exit $EXIT_CODE
  try_rpm "$@" && exit $EXIT_CODE
  try_brew "$@" && exit $EXIT_CODE
fi

echo No supported package manager installed >&2
exit 1
