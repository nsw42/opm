#! /bin/sh
# opm install: Install one or more packages

if [ "$1" = "--list-commands" ]; then
  printf "  %-10s Install one or more packages\n"  install
  exit 0
fi

if [ -z "$1" -o "$1" = "-h" -o "$1" = "--help" ]; then
  echo Usage: opm install package...
  exit 0
fi

assume_yes=false
if [ "$1" = "-y" -o "$1" = "--yes" ]; then
  assume_yes=true
  shift
fi

# try_FOO -
#   if package manager FOO is found:
#     invoke the package manager to install the package(s) specified on the command line
#     set EXIT_CODE
#     return 0
#   otherwise, return 1

try_apk() {
  if [ -x "$(command -v apk)" ]; then
    apk add --no-interactive "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_aptget() {
  if [ -x "$(command -v apt-get)" ]; then
    apt-get install --yes "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_brew() {
  if [ -x "$(command -v brew)" ]; then
    brew install "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_microdnf() {
  if [ -x "$(command -v microdnf)" ]; then
    local microdnf_opts
    if $assume_yes; then
      microdnf_opts=-y
    fi
    microdnf install $microdnf_opts "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_pacman() {
  if [ -x "$(command -v pacman)" ]; then
    # Note that this seems to upgrade packages that are already installed.
    # My pacman foo is limited, so I'm not sure how to install, but not upgrade, packages.
    # The --needed flag stops reinstallation of up-to-date packages.
    # It would be possible to iterate through $@, but that could result in a
    # lot of prompting for confirmation, and muddies the exit code. So, for now
    # at least, this just takes the simple option
    local pacman_opts
    if $assume_yes; then
      pacman_opts=--noconfirm
    fi
    pacman -S --needed $pacman_opts "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

try_yum() {
  if [ -x "$(command -v yum)" ]; then
    local yum_opts
    if $assume_yes; then
      yum_opts=-y
    fi
    yum install $yum_opts "$@"
    EXIT_CODE=$?
    return 0
  fi
  return 1
}

if [ $(uname) = Darwin ]; then
  try_brew "$@" && exit $EXIT_CODE
else
  try_apk "$@" && exit $EXIT_CODE
  try_aptget "$@" && exit $EXIT_CODE
  try_microdnf "$@" && exit $EXIT_CODE
  try_pacman "$@" && exit $EXIT_CODE
  try_yum "$@" && exit $EXIT_CODE
  try_brew "$@" && exit $EXIT_CODE
fi

echo No supported package manager installed >&2
exit 1
