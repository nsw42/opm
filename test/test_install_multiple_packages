#! /bin/sh
# Running `opm install package1 package2 package3` installs those packages

. $TESTDIR/lib_test_functions

ERR=$TMPDIR/$(basename $0).err
OUT=$TMPDIR/$(basename $0).out

if [ $(uname) = Darwin ]; then
  . $TESTDIR/lib_macos
  for package in $MACOS_INSTALLABLE_PACKAGES; do
    if brew list | grep "^${package}\$" > /dev/null; then
      echo $package is already installed before test starts >> $LOGFILE
      exit 1
    fi
  done

  $BINDIR/opm install $packages > $OUT 2> $ERR
  EXIT_CODE=$?

  copy_file_to_log $OUT stdout
  copy_file_to_log $ERR stderr

  check_exit_code $EXIT_CODE 0

  for package in $packages; do
    if brew list | grep "^${package}\$" > /dev/null; then
      # Installation looks to have been successful

      brew uninstall $package > /dev/null 2>&1
    else
      echo "opm install $package failed" >> $LOGFILE
      exit 1
    fi
  done

  exit 0
else
  . $TESTDIR/lib_linux
  run_apt_get_update_on_debian

  for package in $packages; do
    if $BINDIR/list 2> /dev/null | grep "^${package}\>" > /dev/null; then
      echo $package is already installed before test starts >> $LOGFILE
      exit 1
    fi
  done

  $BINDIR/opm install $packages > $OUT 2> $ERR
  EXIT_CODE=$?

  copy_file_to_log $OUT stdout
  copy_file_to_log $ERR stderr

  check_exit_code $EXIT_CODE 0

  for package in $packages; do
    if $BINDIR/opm list 2> /dev/null | grep "^${package}\>" > /dev/null; then
      # Installation looks to have been successful
      $BINDIR/opm uninstall $package > /dev/null 2>&1  # not part of the test, so ignore whether it works or not
    else
      echo "opm install $package failed" >> $LOGFILE
      exit 1
    fi
  done

  exit 0
fi
