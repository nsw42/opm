#! /bin/sh
# Running list subcommand should result in a list of installed packages

. $TESTDIR/lib_test_functions.sh

ERR=$TMPDIR/$(basename $0).err
OUT=$TMPDIR/$(basename $0).out

$BINDIR/opm list > $OUT 2> $ERR

if [ $(uname) = Darwin ]; then
  # This is awkward: there are no guarantees about what will be installed.
  # For now, be happy with *something* on stdout and nothing written to stderr
  check_file_is_not_empty "$OUT" stdout
  check_file_is_empty "$ERR" stderr

  echo "stdout was non-empty:" >> $LOGFILE
  echo "--- begin stdout head ---" >> $LOGFILE
  head -n 5 $OUT >> $LOGFILE
  echo "--- end stdout head ---" >> $LOGFILE
  echo "stderr was empty:" >> $LOGFILE
  echo "--- begin stderr ---" >> $LOGFILE
  cat $ERR >> $LOGFILE
  echo "--- end stderr ---" >> $LOGFILE
  exit 0
else
  if [ -f /etc/alpine-release ]; then
    expected_package=busybox
  elif [ -f /etc/debian_version ]; then
    # Debian or Ubuntu
    expected_package=debianutils
  else
    echo "Unrecognised OS encountered" >> $LOGFILE
    exit 1
  fi

  if grep -q "^${expected_package}.*installed" $OUT; then
    # All good
    echo "Found expected package $expected_package in output:" >> $LOGFILE
    grep "^${expected_package}.*installed" $OUT >> $LOGFILE
  else
    echo "Expected package $expected_package not found" >> $LOGFILE
    echo "--- begin stdout ---" >> $LOGFILE
    cat $OUT >> $LOGFILE
    echo "--- end stdout ---" >> $LOGFILE
    exit 1
  fi
fi
