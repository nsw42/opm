#! /bin/sh
# Running list subcommand should result in a list of installed packages

. $TESTDIR/lib_packages
. $TESTDIR/lib_test_functions

ERR=$TMPDIR/$(basename $0).err
OUT=$TMPDIR/$(basename $0).out

$BINDIR/opm list > $OUT 2> $ERR

if [ $(uname) = Darwin ]; then
  # This is awkward: there are no guarantees about what will be installed.
  # For now, be happy with *something* on stdout and nothing written to stderr
  check_file_is_not_empty "$OUT" stdout
  check_file_is_empty "$ERR" stderr

  echo "stdout was non-empty:" >> $LOGFILE
  echo "--- begin stdout head ---" >> $LOGFILE
  head -n 5 $OUT >> $LOGFILE
  echo "--- end stdout head ---" >> $LOGFILE

  echo "stderr was empty:" >> $LOGFILE
  copy_file_to_log $ERR stderr
  exit $EXIT_TEST_PASSED
else
  expected_package=$(echo "$INSTALLED_PACKAGES" | cut -d ' ' -f 1)

  # This can actually result in some false positives - eg if we're looking for
  # glibc, but glibc-common is installed. However, this is probably ok:
  # it shows that something plausible was written
  if grep -q "^${expected_package}" $OUT; then
    # All good
    echo "Found expected package $expected_package in output:" >> $LOGFILE
    grep "^${expected_package}" $OUT >> $LOGFILE
  else
    echo "Expected package $expected_package not found" >> $LOGFILE
    copy_file_to_log $OUT stdout
    exit $EXIT_TEST_FAILED
  fi
  exit $EXIT_TEST_PASSED
fi
