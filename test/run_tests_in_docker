#! /bin/sh

IMAGE=$1
shift

docker pull "$IMAGE" >> $LOGFILE 2>&1
if [ $? -ne 0 ]; then
  echo docker pull failed >> $LOGFILE
  exit 1
fi

SUBDIR=$(echo "$IMAGE" | tr -Cd 'a-zA-Z0-9_-')
mkdir -p $LOGDIR/$SUBDIR
mkdir -p $TMPDIR/$SUBDIR

cd $TESTDIR/.. 

INSTALL_TESTS=$(echo "$@" | tr ' ' '\n' | grep ^test_installer)
if [ -n "$INSTALL_TESTS" ]; then
  # The test of the install script requires a different environment to the other tests
  # Also, each test needs a fresh Docker container
  for install_test in $INSTALL_TESTS; do
    docker run --rm \
      -v ./:/opm \
      -w / \
      -e ROOTDIR=/opm \
      -e TESTDIR=/opm/test \
      -e LOGDIR=/opm/test/log/$SUBDIR \
      -e LOGFILE=/opm/test/log/$SUBDIR/$(basename $LOGFILE) \
      -e LOGCOLOUR=${LOGCOLOUR:-$DEFAULT_LOGCOLOUR} \
      --entrypoint /opm/test/run_tests \
      "$IMAGE" \
      $install_test
  done
fi

OTHER_TESTS=$(echo "$@" | tr ' ' '\n' | grep -v ^test_installer)
docker run --rm \
  -v ./src:/opm \
  -v ./test:/test \
  -w /test \
  -e BINDIR=/opm \
  -e TESTDIR=/test \
  -e LOGDIR=/test/log/$SUBDIR \
  -e TMPDIR=/test/tmp/$SUBDIR \
  -e LOGFILE=/test/log/$SUBDIR/$(basename $LOGFILE) \
  -e LOGCOLOUR=${LOGCOLOUR:-$DEFAULT_LOGCOLOUR} \
  --entrypoint /test/run_tests \
  "$IMAGE" \
  $OTHER_TESTS
