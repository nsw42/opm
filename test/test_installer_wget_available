#! /bin/sh
# Test the install script
# Note that this differs from the other test scripts: 
# It runs the installer, rather than the scripts in $BINDIR
# As a result, the run_tests_in_docker script has special handling for this script.

. $TESTDIR/lib_test_functions

ERR=$TESTDIR/tmp/$(basename $0).err
OUT=$TESTDIR/tmp/$(basename $0).out

if [ $(uname) = Darwin -o  -f /etc/redhat-release -o -f /etc/arch-release ]; then
  echo "curl is provided by the OS, and is used in preference to wget" >> $LOGFILE
  echo "Skipping test" >> $LOGFILE
  exit $EXIT_TEST_SKIPPED
else
  # Sigh. Install wget
  . $TESTDIR/lib_packages
  init_container_for_tests
  apk add wget > /dev/null 2>&1 || apt-get install --yes wget > /dev/null 2>&1 || brew install wget > /dev/null 2>&1
  if [ ! -x $(command -v wget) ]; then
    echo "Test setup failed: unable to install wget"
    echo "Aborting"
    exit $EXIT_TEST_FAILED
  fi
fi

# Simple happy path test: run the installer, and check that the binaries are available
$ROOTDIR/install.sh -v > $OUT 2> $ERR
EXIT_CODE=$?

copy_file_to_log $OUT stdout
copy_file_to_log $ERR stderr

check_exit_code $EXIT_CODE 0

for command in opm opm_help opm_install opm_list opm_uninstall opm_update; do
  if ! $command --help > /dev/null 2>&1; then
    echo "$command --help failed" >> $LOGFILE
    exit $EXIT_TEST_FAILED
  fi
done

